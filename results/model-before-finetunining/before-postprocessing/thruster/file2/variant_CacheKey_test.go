package internal

import (
    "testing"
    "net/http"
    "strings"
    "github.com/stretchr/testify/assert"
)

type Variants struct {
    Variant1 *http.Request
    Variant2 *http.Request
    Variants3 []string
}

func TestCacheKey(t *testing.T) {
    // Test with valid input
    t.Run("ValidInput", func(t *testing.T) assert.True {
        req1 := &http.Request{
            Method: "GET",
            URL:    http.ParseRequest("http://example.com/path?query=value"),
            Header:  make(map[string]string),
        }
        req2 := &http.Request{
		    Method: "POST",
		    URL:    http.ParseRequest("/submit"),
		    Header:  make(map[interface{}]interface{}),
		}
        variants := Variants{
            Variant1: req1,
            Variant2: req2,
        }

        key1 := variants.Variant1.CacheKey()
        key2 := variants.Variant2.CacheKey()

        assert.NotNil(t, key1)
        assert.NotNil(key2)
    })

    // Test with invalid input
    t.Run("InvalidInput", func(t *testing00000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f0000001100000012000000130000001400000015000000160000001700000018000000190000001a0000001b0000001c0000001d0000001e0000001f0000002100000022000000230000002400000025000000260000002700000028000000290000002a0000002b0000002c0000002d0000002e0000002f0000003100000032000000330000003400000035000000360000003700000038000000390000003a0000003b0000003c0000003d0000003e0000003f0000004100000042000000430000004400000045000000460000004700000048000000490000004a0000004b0000004c0000004d0000004e0000004f0000005100000052000000530000005400000055000000560000005700000058000000590000005a0000005b0000005c0000005d0000005e0000005f0000006100000062000000630000006400000065000000660000006700000068000000690000006a0000006b0000006c0000006d0000006e0000006f0000007100000072000000730000007400000075000000760000007700000078000000790000007a0000007b0000007c0000007d0000007e0000007f0000008100000082000000830000008400000085000000860000008700000088000000890000008a0000008b0000008c0000008d0000008e0000008f0000009100000092000000930000009400000095000000960000009700000098000000990000009a0000009b0000009c0000009d0000009e0000009f000000a1000000a2000000a3000000a4000000a5000000a6000000a7000000a8000000a9000000aa000000ab000000ac000000ad000000ae000000af000000b1000000b2000000b3000000b4000000b5000000b6000000b7000000b8000000b9000000ba000000bb000000bc000000bd000000be000000bf000000c1000000c2000000c3000000c4000000c5000000c6000000c7000000c8000000c9000000ca000000cb000000cc000000cd000000ce000000cf000000d1000000d2000000d3000000d4000000d5000000d6000000d7000000d8000000d9000000da000000db000000dc000000dd00000de000000df00000d1100000
